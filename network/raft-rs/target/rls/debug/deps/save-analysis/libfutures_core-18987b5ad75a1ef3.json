{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1","program":"/Users/choiccc/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--edition=2018","--crate-name","futures_core","/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=18987b5ad75a1ef3","-C","extra-filename=-18987b5ad75a1ef3","--out-dir","/Users/choiccc/Workspace/ccc/lab/network/raft-rs/target/rls/debug/deps","-L","dependency=/Users/choiccc/Workspace/ccc/lab/network/raft-rs/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/choiccc/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/choiccc/Workspace/ccc/lab/network/raft-rs/target/rls/debug/deps/libfutures_core-18987b5ad75a1ef3.rmeta"},"prelude":{"crate_id":{"name":"futures_core","disambiguator":[10806905101986768359,15483010231024859206]},"crate_root":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src","external_crates":[{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12480940028815742386,17133840292323062676]}},{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/future.rs","num":2,"id":{"name":"core","disambiguator":[12740277115278631702,12640810556085455126]}},{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9032649326521538135,12667967411968509476]}},{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10009283058736322418,8662397509334631840]}},{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3924216512132021142,13433065908605684942]}},{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3030377414627030993,4885163689723098329]}},{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[13235301763130876389,11956675772311029582]}},{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5839480494490908876,4697973287732230237]}},{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[1041246640194432752,18216372201816767321]}},{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[4759184321302818619,12022396673976004994]}},{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[1295962249923865998,4753204618089216455]}},{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[11309261669264167917,12633313349437080871]}},{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11563747115584760512,7975991426192958756]}},{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[2660116328215505580,9545010463301493925]}}],"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/lib.rs","byte_start":0,"byte_end":1179,"line_start":1,"line_end":36,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":7887},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/future.rs","byte_start":1296,"byte_end":1302,"line_start":7,"line_end":7,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":2,"index":7887},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/lib.rs","byte_start":930,"byte_end":936,"line_start":23,"line_end":23,"column_start":39,"column_end":45},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":26},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/lib.rs","byte_start":938,"byte_end":949,"line_start":23,"line_end":23,"column_start":47,"column_end":58},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":41},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/lib.rs","byte_start":951,"byte_end":960,"line_start":23,"line_end":23,"column_start":60,"column_end":69},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":77},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/lib.rs","byte_start":1018,"byte_end":1024,"line_start":26,"line_end":26,"column_start":39,"column_end":45},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":91},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/lib.rs","byte_start":1026,"byte_end":1037,"line_start":26,"line_end":26,"column_start":47,"column_end":58},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":106},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/lib.rs","byte_start":1039,"byte_end":1048,"line_start":26,"line_end":26,"column_start":60,"column_end":69},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":151},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/task/__internal/mod.rs","byte_start":12785,"byte_end":12796,"line_start":4,"line_end":4,"column_start":29,"column_end":40},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":141}},{"kind":"Use","ref_id":{"krate":2,"index":7958},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/task/mod.rs","byte_start":12144,"byte_end":12151,"line_start":9,"line_end":9,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":2,"index":31569},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/task/mod.rs","byte_start":12153,"byte_end":12157,"line_start":9,"line_end":9,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":2,"index":7968},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/task/mod.rs","byte_start":12159,"byte_end":12164,"line_start":9,"line_end":9,"column_start":37,"column_end":42},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":2,"index":31609},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/task/mod.rs","byte_start":12166,"byte_end":12174,"line_start":9,"line_end":9,"column_start":44,"column_end":52},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":2,"index":31618},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/task/mod.rs","byte_start":12176,"byte_end":12190,"line_start":9,"line_end":9,"column_start":54,"column_end":68},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":138}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/lib.rs","byte_start":1175,"byte_end":1176,"line_start":35,"line_end":35,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":177}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/lib.rs","byte_start":0,"byte_end":1179,"line_start":1,"line_end":36,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":61},{"krate":0,"index":65},{"krate":0,"index":134},{"krate":0,"index":138},{"krate":0,"index":177}],"decl_id":null,"docs":" Core traits and types for asynchronous operations in Rust.\n","sig":null,"attributes":[{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/lib.rs","byte_start":189,"byte_end":277,"line_start":7,"line_end":7,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/lib.rs","byte_start":445,"byte_end":466,"line_start":10,"line_end":10,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":13},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/future.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/future.rs","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":41},{"krate":0,"index":45},{"krate":0,"index":52}],"decl_id":null,"docs":" Futures.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":20},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/future.rs","byte_start":1480,"byte_end":1489,"line_start":12,"line_end":12,"column_start":10,"column_end":19},"name":"BoxFuture","qualname":"::future::BoxFuture","value":"Pin<alloc::boxed::Box<dyn Future<Output = T> + Send + 'a>>","parent":null,"children":[],"decl_id":null,"docs":" An owned dynamically typed [`Future`] for use in cases where you can't\n statically type your result or need to add some indirection.\n","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/future.rs","byte_start":1445,"byte_end":1470,"line_start":11,"line_end":11,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":23},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/future.rs","byte_start":1648,"byte_end":1662,"line_start":16,"line_end":16,"column_start":10,"column_end":24},"name":"LocalBoxFuture","qualname":"::future::LocalBoxFuture","value":"Pin<alloc::boxed::Box<dyn Future<Output = T> + 'a>>","parent":null,"children":[],"decl_id":null,"docs":" `BoxFuture`, but without the `Send` requirement.\n","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/future.rs","byte_start":1613,"byte_end":1638,"line_start":15,"line_end":15,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":26},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/future.rs","byte_start":2189,"byte_end":2200,"line_start":26,"line_end":26,"column_start":11,"column_end":22},"name":"FusedFuture","qualname":"::future::FusedFuture","value":"FusedFuture: Future","parent":null,"children":[{"krate":0,"index":27}],"decl_id":null,"docs":" A future which tracks whether or not the underlying future\n should no longer be polled.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/future.rs","byte_start":2294,"byte_end":2307,"line_start":28,"line_end":28,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"::future::FusedFuture::is_terminated","value":"fn (&self) -> bool","parent":{"krate":0,"index":26},"children":[],"decl_id":null,"docs":" Returns `true` if the underlying future should no longer be polled.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":36},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/future.rs","byte_start":2749,"byte_end":2755,"line_start":50,"line_end":50,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::future::private_try_future::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":41},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/future.rs","byte_start":2979,"byte_end":2988,"line_start":57,"line_end":57,"column_start":11,"column_end":20},"name":"TryFuture","qualname":"::future::TryFuture","value":"TryFuture: Future + private_try_future::Sealed","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44}],"decl_id":null,"docs":" A convenience for futures that return `Result` values that includes\n a variety of adapters tailored to such futures.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":42},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/future.rs","byte_start":3098,"byte_end":3100,"line_start":59,"line_end":59,"column_start":10,"column_end":12},"name":"Ok","qualname":"::future::TryFuture::Ok","value":"type Ok;","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" The type of successful values yielded by this future\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":43},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/future.rs","byte_start":3164,"byte_end":3169,"line_start":62,"line_end":62,"column_start":10,"column_end":15},"name":"Error","qualname":"::future::TryFuture::Error","value":"type Error;","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" The type of failures yielded by this future\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/future.rs","byte_start":3419,"byte_end":3427,"line_start":69,"line_end":69,"column_start":8,"column_end":16},"name":"try_poll","qualname":"::future::TryFuture::try_poll","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<Self::Ok, Self::Error>>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Poll this `TryFuture` as if it were a `Future`.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":65},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":81},{"krate":0,"index":86},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":106},{"krate":0,"index":110},{"krate":0,"index":117}],"decl_id":null,"docs":" Asynchronous streams.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":71},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":4554,"byte_end":4563,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"BoxStream","qualname":"::stream::BoxStream","value":"Pin<alloc::boxed::Box<dyn Stream<Item = T> + Send + 'a>>","parent":null,"children":[],"decl_id":null,"docs":" An owned dynamically typed [`Stream`] for use in cases where you can't\n statically type your result or need to add some indirection.\n","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":4519,"byte_end":4544,"line_start":9,"line_end":9,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":74},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":4720,"byte_end":4734,"line_start":14,"line_end":14,"column_start":10,"column_end":24},"name":"LocalBoxStream","qualname":"::stream::LocalBoxStream","value":"Pin<alloc::boxed::Box<dyn Stream<Item = T> + 'a>>","parent":null,"children":[],"decl_id":null,"docs":" `BoxStream`, but without the `Send` requirement.\n","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":4685,"byte_end":4710,"line_start":13,"line_end":13,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":77},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":5341,"byte_end":5347,"line_start":27,"line_end":27,"column_start":11,"column_end":17},"name":"Stream","qualname":"::stream::Stream","value":"Stream","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80}],"decl_id":null,"docs":" A stream of values produced asynchronously.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":5282,"byte_end":5330,"line_start":26,"line_end":26,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":78},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":5397,"byte_end":5401,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"name":"Item","qualname":"::stream::Stream::Item","value":"type Item;","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":" Values yielded by the stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":6635,"byte_end":6644,"line_start":58,"line_end":58,"column_start":8,"column_end":17},"name":"poll_next","qualname":"::stream::Stream::poll_next","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<Self::Item>>","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":" Attempt to pull out the next value of this stream, registering the\n current task for wakeup if the value is not yet available, and returning\n `None` if the stream is exhausted.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":8052,"byte_end":8061,"line_start":90,"line_end":90,"column_start":8,"column_end":17},"name":"size_hint","qualname":"::stream::Stream::size_hint","value":"fn (&self) -> (usize, Option<usize>)","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":" Returns the bounds on the remaining length of the stream.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":8035,"byte_end":8044,"line_start":89,"line_end":89,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":91},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":9328,"byte_end":9339,"line_start":137,"line_end":137,"column_start":11,"column_end":22},"name":"FusedStream","qualname":"::stream::FusedStream","value":"FusedStream: Stream","parent":null,"children":[{"krate":0,"index":92}],"decl_id":null,"docs":" A stream which tracks whether or not the underlying stream\n should no longer be polled.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":9422,"byte_end":9435,"line_start":139,"line_end":139,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"::stream::FusedStream::is_terminated","value":"fn (&self) -> bool","parent":{"krate":0,"index":91},"children":[],"decl_id":null,"docs":" Returns `true` if the stream should no longer be polled.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":101},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":9877,"byte_end":9883,"line_start":161,"line_end":161,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::stream::private_try_stream::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":106},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":10105,"byte_end":10114,"line_start":168,"line_end":168,"column_start":11,"column_end":20},"name":"TryStream","qualname":"::stream::TryStream","value":"TryStream: Stream + private_try_stream::Sealed","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109}],"decl_id":null,"docs":" A convenience for streams that return `Result` values that includes\n a variety of adapters tailored to such futures.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":107},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":10224,"byte_end":10226,"line_start":170,"line_end":170,"column_start":10,"column_end":12},"name":"Ok","qualname":"::stream::TryStream::Ok","value":"type Ok;","parent":{"krate":0,"index":106},"children":[],"decl_id":null,"docs":" The type of successful values yielded by this future\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":108},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":10290,"byte_end":10295,"line_start":173,"line_end":173,"column_start":10,"column_end":15},"name":"Error","qualname":"::stream::TryStream::Error","value":"type Error;","parent":{"krate":0,"index":106},"children":[],"decl_id":null,"docs":" The type of failures yielded by this future\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":10545,"byte_end":10558,"line_start":180,"line_end":180,"column_start":8,"column_end":21},"name":"try_poll_next","qualname":"::stream::TryStream::try_poll_next","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<Result<Self::Ok, Self::Error>>>","parent":{"krate":0,"index":106},"children":[],"decl_id":null,"docs":" Poll this `TryStream` as if it were a `Stream`.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":138},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":171}],"decl_id":null,"docs":" Task notification.\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/lib.rs","byte_start":1052,"byte_end":1064,"line_start":28,"line_end":28,"column_start":1,"column_end":13}}]},{"kind":"Mod","id":{"krate":0,"index":141},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/task/__internal/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"__internal","qualname":"::task::__internal","value":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/task/__internal/mod.rs","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":170}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":151},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/task/__internal/atomic_waker.rs","byte_start":15700,"byte_end":15711,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"AtomicWaker","qualname":"::task::__internal::atomic_waker::AtomicWaker","value":"AtomicWaker {  }","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153}],"decl_id":null,"docs":" A synchronization primitive for task wakeup.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/task/__internal/atomic_waker.rs","byte_start":20770,"byte_end":20773,"line_start":200,"line_end":200,"column_start":12,"column_end":15},"name":"new","qualname":"<AtomicWaker>::new","value":"fn () -> AtomicWaker","parent":null,"children":[],"decl_id":null,"docs":" Create an `AtomicWaker`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/task/__internal/atomic_waker.rs","byte_start":23073,"byte_end":23081,"line_start":261,"line_end":261,"column_start":12,"column_end":20},"name":"register","qualname":"<AtomicWaker>::register","value":"fn (&self, waker: &Waker) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Registers the waker to be notified on calls to `wake`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/task/__internal/atomic_waker.rs","byte_start":27749,"byte_end":27753,"line_start":353,"line_end":353,"column_start":12,"column_end":16},"name":"wake","qualname":"<AtomicWaker>::wake","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Calls `wake` on the last `Waker` passed to `register`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/task/__internal/atomic_waker.rs","byte_start":28249,"byte_end":28253,"line_start":367,"line_end":367,"column_start":12,"column_end":16},"name":"take","qualname":"<AtomicWaker>::take","value":"fn (&self) -> Option<Waker>","parent":null,"children":[],"decl_id":null,"docs":" Returns the last `Waker` passed to `register`, so that the user can wake it.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":177},"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/lib.rs","byte_start":1122,"byte_end":1135,"line_start":33,"line_end":33,"column_start":9,"column_end":22},"name":"core_reexport","qualname":"::core_reexport","value":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":178}],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/future.rs","byte_start":2512,"byte_end":2515,"line_start":37,"line_end":37,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/future.rs","byte_start":2789,"byte_end":2790,"line_start":52,"line_end":52,"column_start":30,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/future.rs","byte_start":3566,"byte_end":3567,"line_start":75,"line_end":75,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/future.rs","byte_start":3931,"byte_end":3934,"line_start":92,"line_end":92,"column_start":59,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/future.rs","byte_start":4135,"byte_end":4151,"line_start":99,"line_end":99,"column_start":54,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":8485,"byte_end":8488,"line_start":110,"line_end":110,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":9640,"byte_end":9643,"line_start":148,"line_end":148,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":9917,"byte_end":9918,"line_start":163,"line_end":163,"column_start":30,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":10690,"byte_end":10691,"line_start":184,"line_end":184,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":11079,"byte_end":11082,"line_start":202,"line_end":202,"column_start":49,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":11488,"byte_end":11504,"line_start":218,"line_end":218,"column_start":44,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":11914,"byte_end":11917,"line_start":233,"line_end":233,"column_start":59,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/task/__internal/atomic_waker.rs","byte_start":20712,"byte_end":20723,"line_start":198,"line_end":198,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/task/__internal/atomic_waker.rs","byte_start":20894,"byte_end":20899,"line_start":203,"line_end":203,"column_start":29,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/task/__internal/atomic_waker.rs","byte_start":29403,"byte_end":29414,"line_start":399,"line_end":399,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/task/__internal/atomic_waker.rs","byte_start":29500,"byte_end":29511,"line_start":405,"line_end":405,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/task/__internal/atomic_waker.rs","byte_start":29640,"byte_end":29651,"line_start":411,"line_end":411,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/task/__internal/atomic_waker.rs","byte_start":29676,"byte_end":29687,"line_start":412,"line_end":412,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/lib.rs","byte_start":884,"byte_end":890,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":13}},{"kind":"Mod","span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/lib.rs","byte_start":972,"byte_end":978,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":65}},{"kind":"Mod","span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/lib.rs","byte_start":1073,"byte_end":1077,"line_start":29,"line_end":29,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":138}},{"kind":"Mod","span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/task/mod.rs","byte_start":12110,"byte_end":12120,"line_start":7,"line_end":7,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":141}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/future.rs","byte_start":2202,"byte_end":2208,"line_start":26,"line_end":26,"column_start":24,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":7887},"to":{"krate":0,"index":26}},{"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/future.rs","byte_start":2512,"byte_end":2515,"line_start":37,"line_end":37,"column_start":25,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":2,"index":28636},"to":{"krate":0,"index":26}},{"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/future.rs","byte_start":2789,"byte_end":2790,"line_start":52,"line_end":52,"column_start":30,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":38},"to":{"krate":0,"index":36}},{"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/future.rs","byte_start":2990,"byte_end":2996,"line_start":57,"line_end":57,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":7887},"to":{"krate":0,"index":41}},{"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/future.rs","byte_start":3019,"byte_end":3025,"line_start":57,"line_end":57,"column_start":51,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":36},"to":{"krate":0,"index":41}},{"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/future.rs","byte_start":3566,"byte_end":3567,"line_start":75,"line_end":75,"column_start":29,"column_end":30},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":46},"to":{"krate":0,"index":41}},{"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/future.rs","byte_start":3931,"byte_end":3934,"line_start":92,"line_end":92,"column_start":59,"column_end":62},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":90},"to":{"krate":0,"index":26}},{"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/future.rs","byte_start":4135,"byte_end":4151,"line_start":99,"line_end":99,"column_start":54,"column_end":70},"kind":{"Impl":{"id":4}},"from":{"krate":1,"index":3724},"to":{"krate":0,"index":26}},{"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":8485,"byte_end":8488,"line_start":110,"line_end":110,"column_start":20,"column_end":23},"kind":{"Impl":{"id":5}},"from":{"krate":2,"index":28636},"to":{"krate":0,"index":77}},{"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":9341,"byte_end":9347,"line_start":137,"line_end":137,"column_start":24,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":77},"to":{"krate":0,"index":91}},{"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":9640,"byte_end":9643,"line_start":148,"line_end":148,"column_start":25,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":2,"index":28636},"to":{"krate":0,"index":91}},{"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":9917,"byte_end":9918,"line_start":163,"line_end":163,"column_start":30,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":103},"to":{"krate":0,"index":101}},{"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":10116,"byte_end":10122,"line_start":168,"line_end":168,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":77},"to":{"krate":0,"index":106}},{"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":10145,"byte_end":10151,"line_start":168,"line_end":168,"column_start":51,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":101},"to":{"krate":0,"index":106}},{"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":10690,"byte_end":10691,"line_start":184,"line_end":184,"column_start":29,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":111},"to":{"krate":0,"index":106}},{"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":11079,"byte_end":11082,"line_start":202,"line_end":202,"column_start":49,"column_end":52},"kind":{"Impl":{"id":9}},"from":{"krate":5,"index":90},"to":{"krate":0,"index":77}},{"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":11488,"byte_end":11504,"line_start":218,"line_end":218,"column_start":44,"column_end":60},"kind":{"Impl":{"id":10}},"from":{"krate":1,"index":3724},"to":{"krate":0,"index":77}},{"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/stream.rs","byte_start":11914,"byte_end":11917,"line_start":233,"line_end":233,"column_start":59,"column_end":62},"kind":{"Impl":{"id":11}},"from":{"krate":5,"index":90},"to":{"krate":0,"index":91}},{"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/task/__internal/atomic_waker.rs","byte_start":20712,"byte_end":20723,"line_start":198,"line_end":198,"column_start":6,"column_end":17},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/task/__internal/atomic_waker.rs","byte_start":20858,"byte_end":20862,"line_start":202,"line_end":202,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1550},"to":{"krate":0,"index":159}},{"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/task/__internal/atomic_waker.rs","byte_start":20894,"byte_end":20899,"line_start":203,"line_end":203,"column_start":29,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":2,"index":7968},"to":{"krate":0,"index":159}},{"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/task/__internal/atomic_waker.rs","byte_start":29403,"byte_end":29414,"line_start":399,"line_end":399,"column_start":18,"column_end":29},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":151},"to":{"krate":2,"index":2210}},{"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/task/__internal/atomic_waker.rs","byte_start":29500,"byte_end":29511,"line_start":405,"line_end":405,"column_start":21,"column_end":32},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":151},"to":{"krate":2,"index":7573}},{"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/task/__internal/atomic_waker.rs","byte_start":29640,"byte_end":29651,"line_start":411,"line_end":411,"column_start":22,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":151},"to":{"krate":2,"index":1538}},{"span":{"file_name":"/Users/choiccc/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.1/src/task/__internal/atomic_waker.rs","byte_start":29676,"byte_end":29687,"line_start":412,"line_end":412,"column_start":22,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":151},"to":{"krate":2,"index":1550}}]}